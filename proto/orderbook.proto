syntax = "proto3";

package orderbook;

service OrderbookService {
    // Subscribe to orderbook updates
    rpc SubscribeOrderbook(SubscribeRequest) returns (stream OrderbookSnapshot);
    
    // Get current orderbook snapshot
    rpc GetOrderbook(GetOrderbookRequest) returns (OrderbookSnapshot);
    
    // Get available markets
    rpc GetMarkets(GetMarketsRequest) returns (GetMarketsResponse);
}

message SubscribeRequest {
    repeated uint32 market_ids = 1;
}

message GetOrderbookRequest {
    uint32 market_id = 1;
    uint32 depth = 2;
}

message GetMarketsRequest {
}

message GetMarketsResponse {
    repeated MarketInfo markets = 1;
}

message MarketInfo {
    uint32 market_id = 1;
    string symbol = 2;
    bool active = 3;
}

message PriceLevel {
    double price = 1;
    double quantity = 2;
    uint32 order_count = 3;
}

message OrderbookSnapshot {
    uint32 market_id = 1;
    string symbol = 2;
    uint64 timestamp_us = 3;
    uint64 sequence = 4;
    repeated PriceLevel bids = 5;
    repeated PriceLevel asks = 6;
}

